trigger:
  - azure-pipeline
pool:
  vmImage: 'ubuntu-latest'
variables:
  imageName: dockeragent:latest
stages:
  - stage: Build LinuxAgent
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build and push Docker image
        steps:
          - task: Docker@1
            displayName: 'Build the Docker image'
            inputs:
              containerregistrytype: 'Container Registry'
              dockerRegistryEndpoint: 'Docker Hub'
              command: 'Build an image'
              dockerFile: 'Utilities/**/Dockerfile'
              imageName: '$(ImageName)'
              includeLatestTag: true
              useDefaultContext: false
              buildContext: '.'
  - stage: Build
    jobs:
      - job:
        displayName: Build and Run Tests
        steps:
          - task: DockerCompose@0
            displayName: Run Docker Command
            inputs:
              containerregistrytype: Container Registry
              dockerComposeFile: docker-compose.yml
              dockerComposeCommand: 'up -d'
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'
              options: 'clean test -Dsurefire.suiteXmlFiles=regression.xml'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/*.xml'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
              sqMavenPluginVersionChoice: 'latest'
          - task: SonarQubePrepare@5
            inputs:
              SonarQube: 'Sonarqube'
              scannerMode: CLI
              configFile: sonar-project.properties
          - task: SonarQubeAnalyze@4
          - task: SonarQubePublish@5
            inputs:
              pollingTimeoutSec: '300'